#   Description:
#   CDS_SUPP_QUOTES.py
#   Insert into RFQ  after inserting into CDS_SUPP_QUOTES 
#
#   Subversion Info
#   ---------------
#   $Id$
#
#
#   Revision History
#   ----------------
#   Created:    25/07/2016
#   --------------------------------------------------------------------------
#   Version Description                             CMS Ref         Changed By
#   -------+---------------------------------------+---------------+----------
#   1.0      Initial version                            N/A         S Ananthan
#  
#    
#   Launch Point Variables
#   ----------------------
#   Object launch point Add and Update
#
#   Relationships
#   -------------

from java.util import Calendar 
from java.util import Date 
from psdi.server import MXServer 
from psdi.mbo import MboConstants 
from psdi.mbo import SqlFormat
from psdi.server import MaxVarServiceRemote
from psdi.server import MaxVars
from psdi.app.common import TaxUtility


def translog(v_key,v_status,v_tablename,v_errormsg):
	cdstranslogset = MXServer.getMXServer().getMboSet("CDS_TRANS_LOG", mbo.getUserInfo())
	cdstranslogmbo = cdstranslogset.add()
	cdstranslogmbo.setValue("KEY",v_key,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	cdstranslogmbo.setValue("TABLENAME",v_tablename,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	cdstranslogmbo.setValue("TRANSDATE",v_date,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	cdstranslogmbo.setValue("ERRORMSG",v_errormsg,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	cdstranslogmbo.setValue("STATUS",v_status,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	cdstranslogset.save()
	return

def addrfqandrfqlineandql(rfqmbo,v_id,v_part_no):
	rfqmbo.setValue("DESCRIPTION","RFQ Autogenerated for Historic " + mbo.getString("ID") +"-" + mbo.getString("COMMENTS") )
	rfqmbo.setValue("SHIPTO","BIRMINGHAM")
	#rfqmbo.setValue("REQUIREDDATE",Date())
	rfqlinemboset = rfqmbo.getMboSet("RFQLINE")
	for i in range(1,5):
		rfqlinembo = rfqlinemboset.addAtEnd(i)
		rfqlinembo.setValue("ITEMNUM",v_part_no)
		rfqlinembo.setValue("ORDERQTY",mbo.getInt("ENQUIRY_QTY_"+str(i)))
		rfqlinembo.setValue("LINETYPE","ITEM")
		rfqlinembo.setValue("ITEMSETID","ITEMSET")
		rfqlinembo.setValue("REQ_QTY_NUM",i)
		rfqlinembo.setValue("LINENUM",10*i)
	rfqvendorset = rfqmbo.getMboSet("RFQVENDOR")
	rfqvendormbo = rfqvendorset.add()
	rfqvendormbo.setValue("VENDOR",v_supplier_name,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	rfqvendormbo.setValue("CONTACT",v_supplier_contact,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	rfqvendormbo.setValue("CDS_RPTSENT",1,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	rfqmbo.changeStatus("SENT", MXServer.getMXServer().getDate(), "Changed by MAXADMIN (Automation Script)")
	quotationlineset = rfqvendormbo.getMboSet("QUOTATIONLINEVENDOR")
	for j in range(1,5):
		quotationlinembo = quotationlineset.addAtEnd(j)
		quotationlinembo.setValue("RFQNUM", rfqmbo.getString("RFQNUM"),MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("RFQLINENUM",j,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("ITEMNUM",v_part_no,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("ITEMSETID","ITEMSET",MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("VENDOR",v_supplier_name,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("LINETYPE","ITEM",MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("ORDERQTY",mbo.getInt("PUR_QTY_"+str(j)),MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("UNITCOST",mbo.getInt("PUR_COST_"+str(j)),MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		v_leadtime = int(round(mbo.getInt("PUR_LT_"+str(j))/7))
		quotationlinembo.setValue("CDS_LEAD_TIME",v_leadtime,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("ISAWARDED",1,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		taxUtility = TaxUtility.getTaxUtility()
		taxUtility.zeroAllTaxes(quotationlinembo, "TAX", 11L)
		quotationlinembo.setValue("CDS_QUOTE_COMMENTS",v_comments,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("CDS_FAIR_NR_COSTS",v_pur_fai_cost,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
		quotationlinembo.setValue("CDS_TOOLING_NR_COSTS",v_pur_tool_cost,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	rfqmbo.changeStatus("COMP", MXServer.getMXServer().getDate(), "Changed by MAXADMIN (Automation Script)")
	rfqmbo.setValue("STATUSDATE",v_date_raised,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	rfqmbo.setValue("REQUIREDDATE",v_date_raised,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)
	return

v_processed_status	= "PROCESSED"
v_error_status		= "ERROR"
v_orgid 			= "RRCDS"
v_siteid			= "BIRM"
v_error_msg			= "Item does not exist"


v_tablename 		= mbo.getName()
v_key 				= mbo.getString(str(v_tablename)+"ID") 
print "===========v_tablename==========="+str(v_tablename)
print "===========v_key==========="+str(v_key)
v_date 				= MXServer.getMXServer().getDate()


if(v_tablename == "CDS_SUPP_QUOTES"):
	v_id				= mbo.getString("ID")
	v_supplier_name		= mbo.getString("SUPPLIER_NAME")
	v_supplier_contact 	= mbo.getString("SUPPLIER_CONTACT")
	v_part_no 			= mbo.getString("PART_NO")
	v_enquiry_qty_1 	= mbo.getInt("ENQUIRY_QTY_1")
	v_enquiry_qty_2 	= mbo.getInt("ENQUIRY_QTY_2")
	v_enquiry_qty_3 	= mbo.getInt("ENQUIRY_QTY_3")
	v_enquiry_qty_4 	= mbo.getInt("ENQUIRY_QTY_4")
	v_date_raised 		= mbo.getDate("DATE_RAISED")
	v_part_desc 		= mbo.getString("PART_DESC")
	v_current_part_issue = mbo.getString("CURRENT_PART_ISSUE")
	v_pur_qty_1 		= mbo.getInt("PUR_QTY_1")
	v_pur_qty_2 		= mbo.getInt("PUR_QTY_2")
	v_pur_qty_3 		= mbo.getInt("PUR_QTY_3")
	v_pur_qty_4 		= mbo.getInt("PUR_QTY_4")
	v_pur_cost_1 		= mbo.getString("PUR_COST_1")
	v_pur_cost_2 		= mbo.getString("PUR_COST_2")
	v_pur_cost_3 		= mbo.getString("PUR_COST_3")
	v_pur_cost_4 		= mbo.getString("PUR_COST_4")
	v_pur_lt_1 			= mbo.getInt("PUR_LT_1")
	v_pur_lt_2 			= mbo.getInt("PUR_LT_2")
	v_pur_lt_3 			= mbo.getInt("PUR_LT_3")
	v_pur_lt_4 			= mbo.getInt("PUR_LT_4")
	v_pur_fai_cost 		= mbo.getString("PUR_FAI_COST")
	v_pur_fai_lt 		= mbo.getString("PUR_FAI_LT")
	v_pur_tool_cost 	= mbo.getString("PUR_TOOL_COST")
	v_pur_tool_lt 		= mbo.getString("PUR_TOOL_LT")
	v_ecr_lt 			= mbo.getString("ECR_LT")
	v_sc_lt 			= mbo.getString("SC_LT")
	v_comments 			= mbo.getString("COMMENTS")
	rfqmboset 			= MXServer.getMXServer().getMboSet("RFQ", mbo.getUserInfo())
	rfqmbo 				= rfqmboset.add()
	addrfqandrfqlineandql(rfqmbo,v_id,v_part_no)
	rfqmboset.save()
	print "===========Processing CDS_SUPP_QUOTES data ========="
	translog(v_key,v_processed_status,v_tablename,"")